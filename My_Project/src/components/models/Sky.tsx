/**
 * IMPORTANT: Loading glTF models into a Three.js scene is a lot of work.
 * Before we can configure or animate our model's meshes, we need to iterate through
 * each part of our model's meshes and save them separately.
 *
 * But luckily there is an app that turns gltf or glb files into jsx components
 * For this model, visit https://gltf.pmnd.rs/
 * And get the code. And then add the rest of the things.
 * YOU DON'T HAVE TO WRITE EVERYTHING FROM SCRATCH
 */

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 sky.glb -T --types
Author: Paul (https://sketchfab.com/paul_paul_paul)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/free-skybox-in-the-cloud-b270497defe24f9cb497b9a075eeb28f
Title: FREE - SkyBox In The Cloud
*/

import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

interface SkyProps {
  isRotating?: boolean
  position?: [number, number, number]
  rotation?: [number, number, number]
  scale?: [number, number, number] | number
}

// 3D Model from: https://sketchfab.com/3d-models/free-skybox-in-the-cloud-b270497defe24f9cb497b9a075eeb28f
export function Sky({ isRotating, ...props }: SkyProps) {
  // Load the 3D model from the provided GLTF file
  const { nodes, materials } = useGLTF('/assets/3d/transformed/sky-transformed.glb')
  
  return (
    // Create a group to contain the sky sphere
    <group {...props} dispose={null}>
      {/* 
        Sky sphere mesh - creates a large sphere that surrounds the entire scene
        Note: Animation names can be found on the Sketchfab website where the 3D model is hosted.
        It ensures smooth animations by making the rotation frame rate-independent.
      */}
      <mesh 
        geometry={(nodes.Sphere__0 as THREE.Mesh).geometry} 
        material={materials['Scene_-_Root']} 
        rotation={[-Math.PI / 2, 0, 0]} 
        scale={500} 
      />
    </group>
  )
}

// Preload the sky model to improve performance
useGLTF.preload('/assets/3d/transformed/sky-transformed.glb')

export default Sky