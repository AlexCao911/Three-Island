/**
 * IMPORTANT: Loading glTF models into a Three.js scene is a lot of work.
 * Before we can configure or animate our model's meshes, we need to iterate through
 * each part of our model's meshes and save them separately.
 *
 * But luckily there is an app that turns gltf or glb files into jsx components
 * For this model, visit https://gltf.pmnd.rs/
 * And get the code. And then add the rest of the things.
 * YOU DON'T HAVE TO WRITE EVERYTHING FROM SCRATCH
 */

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 fox.glb -T --types
Author: victory_mirosya (https://sketchfab.com/victory_mirosya)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/fox-f372c04de44640fbb6a4f9e4e5845c78
Title: Fox
*/

import { useRef, useMemo, useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import * as THREE from 'three'

// Define available animation names for the fox model
type ActionName = 'Survey' | 'Walk' | 'Run'

interface FoxProps {
  currentAnimation?: ActionName
  position?: [number, number, number]
  rotation?: [number, number, number]
  scale?: [number, number, number] | number
}

// 3D Model from: https://sketchfab.com/3d-models/fox-f372c04de44640fbb6a4f9e4e5845c78
export function Fox({ currentAnimation = 'Survey', ...props }: FoxProps) {
  const group = useRef<THREE.Group>(null)
  
  // Load the 3D model and animations from the provided GLTF file
  const { scene, animations } = useGLTF('/assets/3d/transformed/fox-transformed.glb')
  
  // Clone the scene to avoid issues with multiple instances
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])
  
  // Extract nodes and materials from the cloned scene
  const { nodes, materials } = useGraph(clone)
  
  // Get access to the animations for the fox
  const { actions } = useAnimations(animations, group)

  // This effect will run whenever the currentAnimation prop changes
  useEffect(() => {
    if (actions && currentAnimation) {
      // Stop all currently playing animations
      Object.values(actions).forEach((action) => action?.stop())
      
      // Play the specified animation
      const currentAction = actions[currentAnimation]
      if (currentAction) {
        currentAction.play()
      }
    }
  }, [actions, currentAnimation])

  return (
    // Create a group to contain all fox mesh components
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        {/* Root joint for the fox skeleton */}
        <primitive object={nodes.GLTF_created_0_rootJoint} />
        
        {/* Fox body parts - each skinned mesh represents a different part of the fox */}
        <skinnedMesh 
          name="Object_7" 
          geometry={(nodes.Object_7 as THREE.SkinnedMesh).geometry} 
          material={materials.PaletteMaterial001} 
          skeleton={(nodes.Object_7 as THREE.SkinnedMesh).skeleton} 
        />
        <skinnedMesh 
          name="Object_8" 
          geometry={(nodes.Object_8 as THREE.SkinnedMesh).geometry} 
          material={materials.PaletteMaterial001} 
          skeleton={(nodes.Object_8 as THREE.SkinnedMesh).skeleton} 
        />
        <skinnedMesh 
          name="Object_9" 
          geometry={(nodes.Object_9 as THREE.SkinnedMesh).geometry} 
          material={materials.PaletteMaterial001} 
          skeleton={(nodes.Object_9 as THREE.SkinnedMesh).skeleton} 
        />
        <skinnedMesh 
          name="Object_10" 
          geometry={(nodes.Object_10 as THREE.SkinnedMesh).geometry} 
          material={materials.PaletteMaterial001} 
          skeleton={(nodes.Object_10 as THREE.SkinnedMesh).skeleton} 
        />
        <skinnedMesh 
          name="Object_11" 
          geometry={(nodes.Object_11 as THREE.SkinnedMesh).geometry} 
          material={materials.PaletteMaterial001} 
          skeleton={(nodes.Object_11 as THREE.SkinnedMesh).skeleton} 
        />
      </group>
    </group>
  )
}

// Preload the fox model to improve performance
useGLTF.preload('/assets/3d/transformed/fox-transformed.glb')