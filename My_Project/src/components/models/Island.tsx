/**
 * IMPORTANT: Loading glTF models into a Three.js scene is a lot of work.
 * Before we can configure or animate our model's meshes, we need to iterate through
 * each part of our model's meshes and save them separately.
 *
 * But luckily there is an app that turns gltf or glb files into jsx components
 * For this model, visit https://gltf.pmnd.rs/
 * And get the code. And then add the rest of the things.
 * YOU DON'T HAVE TO WRITE EVERYTHING FROM SCRATCH
 */

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 island.glb -T --types
Author: nimzu (https://sketchfab.com/nimzuk)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/foxs-islands-163b68e09fcc47618450150be7785907
Title: Fox's islands
*/
import { useGLTF } from '@react-three/drei'
import { useRef, useEffect } from 'react'
import { useFrame, useThree } from '@react-three/fiber'
import { a } from '@react-spring/three'
import * as THREE from 'three'

interface IslandProps {
  position?: [number, number, number]
  rotation?: [number, number, number]
  scale?: [number, number, number] 
  isRotating?: boolean
  setIsRotating?: (rotating: boolean) => void
  setCurrentStage?: (stage: number) => void
}

// Island 3D model from: https://sketchfab.com/3d-models/foxs-islands-163b68e09fcc47618450150be7785907
export function Island(props: IslandProps) {
  // Load the 3D model from the provided GLTF file
  const { nodes, materials } = useGLTF('/assets/3d/transformed/island-transformed.glb')

  return (
    // Create a group to contain all island mesh components
    <a.group {...props} dispose={null}>
      {/* Main island rock base */}
      <mesh
        geometry={(nodes.pCube11_rocks1_0 as THREE.Mesh).geometry}
        material={materials.PaletteMaterial001}
      />

      {/* Tree instances - each instancedMesh renders multiple copies of the same geometry */}
      <instancedMesh
        args={[
          (nodes.polySurface944_tree_body_0 as THREE.InstancedMesh).geometry,
          materials.PaletteMaterial001,
          8
        ]}
        instanceMatrix={(nodes.polySurface944_tree_body_0 as THREE.InstancedMesh).instanceMatrix}
      />
      <instancedMesh
        args={[
          (nodes.polySurface945_tree1_0 as THREE.InstancedMesh).geometry,
          materials.PaletteMaterial001,
          5
        ]}
        instanceMatrix={(nodes.polySurface945_tree1_0 as THREE.InstancedMesh).instanceMatrix}
      />
      <instancedMesh
        args={[
          (nodes.polySurface946_tree2_0 as THREE.InstancedMesh).geometry,
          materials.PaletteMaterial001,
          5
        ]}
        instanceMatrix={(nodes.polySurface946_tree2_0 as THREE.InstancedMesh).instanceMatrix}
      />
      <instancedMesh
        args={[
          (nodes.polySurface947_tree1_0 as THREE.InstancedMesh).geometry,
          materials.PaletteMaterial001,
          5
        ]}
        instanceMatrix={(nodes.polySurface947_tree1_0 as THREE.InstancedMesh).instanceMatrix}
      />
      <instancedMesh
        args={[
          (nodes.polySurface948_tree_body_0 as THREE.InstancedMesh).geometry,
          materials.PaletteMaterial001,
          8
        ]}
        instanceMatrix={(nodes.polySurface948_tree_body_0 as THREE.InstancedMesh).instanceMatrix}
      />
      <instancedMesh
        args={[
          (nodes.polySurface949_tree_body_0 as THREE.InstancedMesh).geometry,
          materials.PaletteMaterial001,
          8
        ]}
        instanceMatrix={(nodes.polySurface949_tree_body_0 as THREE.InstancedMesh).instanceMatrix}
      />
    </a.group>
  )
}

// Preload the island model to improve performance
useGLTF.preload('/assets/3d/transformed/island-transformed.glb')

export default Island